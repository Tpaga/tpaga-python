# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class CreditCard(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        CreditCard - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'bin': 'str',
            'type': 'str',
            'expiration_month': 'str',
            'expiration_year': 'str',
            'card_verification_code': 'str',
            'card_holder_name': 'str',
            'last_four': 'str',
            'customer': 'str',
            'address_line1': 'str',
            'address_line2': 'str',
            'address_city': 'str',
            'address_state': 'str',
            'address_postal_code': 'str',
            'address_country': 'str'
        }

        self.attribute_map = {
            'id': 'id',
            'bin': 'bin',
            'type': 'type',
            'expiration_month': 'expirationMonth',
            'expiration_year': 'expirationYear',
            'card_verification_code': 'cardVerificationCode',
            'card_holder_name': 'cardHolderName',
            'last_four': 'lastFour',
            'customer': 'customer',
            'address_line1': 'addressLine1',
            'address_line2': 'addressLine2',
            'address_city': 'addressCity',
            'address_state': 'addressState',
            'address_postal_code': 'addressPostalCode',
            'address_country': 'addressCountry'
        }

        self._id = None
        self._bin = None
        self._type = None
        self._expiration_month = None
        self._expiration_year = None
        self._card_verification_code = None
        self._card_holder_name = None
        self._last_four = None
        self._customer = None
        self._address_line1 = None
        self._address_line2 = None
        self._address_city = None
        self._address_state = None
        self._address_postal_code = None
        self._address_country = None

    @property
    def id(self):
        """
        Gets the id of this CreditCard.


        :return: The id of this CreditCard.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this CreditCard.


        :param id: The id of this CreditCard.
        :type: str
        """
        self._id = id

    @property
    def bin(self):
        """
        Gets the bin of this CreditCard.


        :return: The bin of this CreditCard.
        :rtype: str
        """
        return self._bin

    @bin.setter
    def bin(self, bin):
        """
        Sets the bin of this CreditCard.


        :param bin: The bin of this CreditCard.
        :type: str
        """
        self._bin = bin

    @property
    def type(self):
        """
        Gets the type of this CreditCard.


        :return: The type of this CreditCard.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """
        Sets the type of this CreditCard.


        :param type: The type of this CreditCard.
        :type: str
        """
        allowed_values = ["AMEX", "VISA", "MASTERCARD", "DINERS"]
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type`, must be one of {0}"
                .format(allowed_values)
            )
        self._type = type

    @property
    def expiration_month(self):
        """
        Gets the expiration_month of this CreditCard.


        :return: The expiration_month of this CreditCard.
        :rtype: str
        """
        return self._expiration_month

    @expiration_month.setter
    def expiration_month(self, expiration_month):
        """
        Sets the expiration_month of this CreditCard.


        :param expiration_month: The expiration_month of this CreditCard.
        :type: str
        """
        self._expiration_month = expiration_month

    @property
    def expiration_year(self):
        """
        Gets the expiration_year of this CreditCard.


        :return: The expiration_year of this CreditCard.
        :rtype: str
        """
        return self._expiration_year

    @expiration_year.setter
    def expiration_year(self, expiration_year):
        """
        Sets the expiration_year of this CreditCard.


        :param expiration_year: The expiration_year of this CreditCard.
        :type: str
        """
        self._expiration_year = expiration_year

    @property
    def card_verification_code(self):
        """
        Gets the card_verification_code of this CreditCard.


        :return: The card_verification_code of this CreditCard.
        :rtype: str
        """
        return self._card_verification_code

    @card_verification_code.setter
    def card_verification_code(self, card_verification_code):
        """
        Sets the card_verification_code of this CreditCard.


        :param card_verification_code: The card_verification_code of this CreditCard.
        :type: str
        """
        self._card_verification_code = card_verification_code

    @property
    def card_holder_name(self):
        """
        Gets the card_holder_name of this CreditCard.


        :return: The card_holder_name of this CreditCard.
        :rtype: str
        """
        return self._card_holder_name

    @card_holder_name.setter
    def card_holder_name(self, card_holder_name):
        """
        Sets the card_holder_name of this CreditCard.


        :param card_holder_name: The card_holder_name of this CreditCard.
        :type: str
        """
        self._card_holder_name = card_holder_name

    @property
    def last_four(self):
        """
        Gets the last_four of this CreditCard.


        :return: The last_four of this CreditCard.
        :rtype: str
        """
        return self._last_four

    @last_four.setter
    def last_four(self, last_four):
        """
        Sets the last_four of this CreditCard.


        :param last_four: The last_four of this CreditCard.
        :type: str
        """
        self._last_four = last_four

    @property
    def customer(self):
        """
        Gets the customer of this CreditCard.


        :return: The customer of this CreditCard.
        :rtype: str
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """
        Sets the customer of this CreditCard.


        :param customer: The customer of this CreditCard.
        :type: str
        """
        self._customer = customer

    @property
    def address_line1(self):
        """
        Gets the address_line1 of this CreditCard.


        :return: The address_line1 of this CreditCard.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """
        Sets the address_line1 of this CreditCard.


        :param address_line1: The address_line1 of this CreditCard.
        :type: str
        """
        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """
        Gets the address_line2 of this CreditCard.


        :return: The address_line2 of this CreditCard.
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """
        Sets the address_line2 of this CreditCard.


        :param address_line2: The address_line2 of this CreditCard.
        :type: str
        """
        self._address_line2 = address_line2

    @property
    def address_city(self):
        """
        Gets the address_city of this CreditCard.


        :return: The address_city of this CreditCard.
        :rtype: str
        """
        return self._address_city

    @address_city.setter
    def address_city(self, address_city):
        """
        Sets the address_city of this CreditCard.


        :param address_city: The address_city of this CreditCard.
        :type: str
        """
        self._address_city = address_city

    @property
    def address_state(self):
        """
        Gets the address_state of this CreditCard.


        :return: The address_state of this CreditCard.
        :rtype: str
        """
        return self._address_state

    @address_state.setter
    def address_state(self, address_state):
        """
        Sets the address_state of this CreditCard.


        :param address_state: The address_state of this CreditCard.
        :type: str
        """
        self._address_state = address_state

    @property
    def address_postal_code(self):
        """
        Gets the address_postal_code of this CreditCard.


        :return: The address_postal_code of this CreditCard.
        :rtype: str
        """
        return self._address_postal_code

    @address_postal_code.setter
    def address_postal_code(self, address_postal_code):
        """
        Sets the address_postal_code of this CreditCard.


        :param address_postal_code: The address_postal_code of this CreditCard.
        :type: str
        """
        self._address_postal_code = address_postal_code

    @property
    def address_country(self):
        """
        Gets the address_country of this CreditCard.


        :return: The address_country of this CreditCard.
        :rtype: str
        """
        return self._address_country

    @address_country.setter
    def address_country(self, address_country):
        """
        Sets the address_country of this CreditCard.


        :param address_country: The address_country of this CreditCard.
        :type: str
        """
        self._address_country = address_country

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
